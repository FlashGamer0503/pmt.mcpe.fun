{"changed":true,"filter":false,"title":"convert.php","tooltip":"/pages/apiUpdator/convert.php","value":"<?php\n\nini_set(\"display_errors\", -1);\n\nglobal $ROOT_DIR;\nglobal $plData;\nglobal $fName;\n$ROOT_DIR = implode(DIRECTORY_SEPARATOR, array_slice(explode(DIRECTORY_SEPARATOR, __DIR__), 0, count(explode(DIRECTORY_SEPARATOR, __DIR__)) - 2));\n\ntry {\n   \n    // Undefined | Multiple Files | $_FILES Corruption Attack\n    if (\n        !isset($_FILES['upfile']['error']) ||\n        is_array($_FILES['upfile']['error']) ||\n        !isset($_POST[\"API_version\"])\n    ) {\n        throw new RuntimeException('Invalid parameters.');\n    }\n\n    // Check $_FILES['upfile']['error'] value.\n    switch ($_FILES['upfile']['error']) {\n        case UPLOAD_ERR_OK:\n            break;\n        case UPLOAD_ERR_NO_FILE:\n            throw new RuntimeException('No file sent.');\n        case UPLOAD_ERR_INI_SIZE:\n        case UPLOAD_ERR_FORM_SIZE:\n            throw new RuntimeException('Exceeded filesize limit.');\n        default:\n            throw new RuntimeException('Unknown errors.');\n    }\n\n    // You should also check filesize here.\n    if ($_FILES['upfile']['size'] > 100000000) {\n        throw new RuntimeException('Exceeded filesize limit.');\n    }\n\n    // DO NOT TRUST $_FILES['upfile']['mime'] VALUE !!\n    // Check MIME Type by yourself.\n    $finfo = new finfo(FILEINFO_MIME_TYPE);\n    if (false === $ext = array_search(\n        $finfo->file($_FILES['upfile']['tmp_name']),\n        array(\n            'phar' => \"application/octet-stream\",\n        ),\n        true\n    )) {\n        throw new RuntimeException('Invalid file format.');\n    }\n\n\n    $fName = \"phar_\" . sha1_file($_FILES['upfile']['tmp_name']);\n\n    // Moving PHAR file.\n    if (!move_uploaded_file(\n        $_FILES['upfile']['tmp_name'],\n        \"$ROOT_DIR/data/tmp/$fName.phar\"\n    )) {\n        throw new RuntimeException('Failed to move uploaded file.');\n    }\n\n    // New name\n    $plData = @yaml_parse(file_get_contents(\"phar://$ROOT_DIR/data/tmp/$fName.phar/plugin.yml\"));\n    if($plData == false) throw new RuntimeException(\"Invalid plugin.yml\");\n    $oldFName = $fName;\n    $fName = \"phar_\" . $plData[\"name\"] .\"_v\" . $plData[\"version\"] . sha1_file(\"$ROOT_DIR/data/tmp/$oldFName.phar\");\n    exec(\"mv $ROOT_DIR/data/tmp/$oldFName.phar $ROOT_DIR/data/phars/$fName.phar\");\n\n    $files = new RecursiveIteratorIterator(\n        new RecursiveDirectoryIterator(\"phar://$ROOT_DIR/data/phars/$fName.phar\"),\n        RecursiveIteratorIterator::LEAVES_ONLY\n    );\n    // Changing files\n    foreach ($files as $name => $file) {\n        if (!$file->isDir()) {\n            $path = $file->getRealPath();\n            if(pathinfo($path, PATHINFO_EXTENSION) == \"php\") {\n                if(isset($_POST[\"TagReplace\"])) {\n                    $contents = file_get_contents($path);\n                    foreach([\n        \t\t    \t\"ByteArray\" => \"ByteArrayTag\",\n        \t\t    \t\"Byte\" => \"ByteTag\",\n        \t\t    \t\"Compound\" => \"CompoundTag\",\n        \t\t    \t\"Double\" => \"DoubleTag\",\n        \t\t    \t\"End\" => \"EndTag\",\n        \t\t    \t\"Float\" => \"FloatTag\",\n        \t\t    \t\"IntArray\" => \"IntArrayTag\",\n        \t\t    \t\"Int\" => \"IntTag\",\n        \t\t    \t\"Enum\" => \"ListTag\",\n        \t\t    \t\"Long\" => \"LongTag\",\n        \t\t    \t\"Short\" => \"ShortTag\",\n        \t\t    \t\"String\" => \"StringTag\",\n        \t\t    ] as $oldTag => $newTag) {\n                        $contents = preg_replace(\"/pocketmine\\\\nbt\\\\tag\\\\$oldTag(;|\\()/mi\", \"pocketmine\\\\nbt\\\\tag\\\\$newTag$1/\", $contents);\n                    }\n                }\n                if(isset($_POST[\"ProtocolReplace\"])) {\n                    $contents = file_get_contents($path);\n                    $contents = preg_replace(\"/pocketmine\\\\network\\\\protocol\\\\(.+?)(;|\\()/mi\", \"pocketmine\\\\network\\\\mcpe\\\\protocol\\\\$1$2/\", $contents);\n                }\n            }\n        }\n    }\n\n    // Chaging API (finally)\n    if(preg_match(\"/\\d+\\.\\d+\\.\\d+/\", $_POST[\"API_version\"]) == false) {\n        throw new RuntimeException(\"Invalid new API provided\");\n    } else {\n        if(is_string($plData[\"api\"])) $plData[\"api\"] = [$plData[\"api\"]];\n        if(!in_array($_POST[\"API_version\"], $plData[\"api\"])) {\n            $plData[\"api\"][] = $_POST[\"API_version\"];\n        } else {\n            throw new RuntimeException(\"API provided already supported by plugin.\");\n        }\n    }\n\n    file_put_contents(\"phar://$ROOT_DIR/data/phars/$fName.phar/plugin.yml\", @yaml_emit($plData));\n} catch(Exception $e) {\n    $error = $e->getMessage();\n    if(isset($fName)) unlink(\"$ROOT_DIR/data/phars/$fName.phar\");\n}\n?>\n\n<html>\n\n<head>\n    <link href=\"https://fonts.googleapis.com/css?family=Roboto:regular,bold,italic,thin,light,bolditalic,black,medium&amp;lang=en\" rel=\"stylesheet\">\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n    <link href=\"https://code.getmdl.io/1.3.0/material.cyan-light_blue.min.css\" rel=\"stylesheet\">\n    <script defer src=\"https://code.getmdl.io/1.3.0/material.min.js\">\n    </script>\n    <link href=\"https://archive.org/download/material-design-style-css/styles.css\" rel=\"stylesheet\">\n    <link href=\"/css/main.css\" rel=\"stylesheet\">\n    <title>PMT - PocketMine Tools</title>\n</head>\n\n<body>\n    <h2><?php echo !isset($error) ? \"<h3>Update Complete!</h3><br><p>Your file was successfully converted. You should now be able to use your plugin in \\\"PocketMine-MP\\\"<br><strong>Corrupted Plugin? Send the file over using twitter and we will track down the issue!</strong></p>\" : \"<h2>Could not build phar: $error</h2>\"; ?>\n        <?php if(!isset($error)) echo '<a href=\"download.php?n=' . $fName . '\"><button class=\"mdl-button mdl-js-button mdl-js-ripple-effect\">Download</button></a>'; ?>\n        <a href=\"index.html\"><button class=\"mdl-button mdl-js-button mdl-js-ripple-effect\">Go back</button></a>\n    </p>\n</body>\n</html>","undoManager":{"mark":-2,"position":13,"stack":[[{"start":{"row":138,"column":283},"end":{"row":138,"column":286},"action":"remove","lines":["h5>"],"id":2},{"start":{"row":138,"column":283},"end":{"row":138,"column":284},"action":"insert","lines":["p"]}],[{"start":{"row":138,"column":284},"end":{"row":138,"column":285},"action":"insert","lines":[">"],"id":3}],[{"start":{"row":138,"column":68},"end":{"row":138,"column":69},"action":"remove","lines":["5"],"id":4}],[{"start":{"row":138,"column":68},"end":{"row":138,"column":69},"action":"insert","lines":["p"],"id":5}],[{"start":{"row":138,"column":68},"end":{"row":138,"column":69},"action":"remove","lines":["p"],"id":6}],[{"start":{"row":138,"column":67},"end":{"row":138,"column":68},"action":"remove","lines":["h"],"id":7}],[{"start":{"row":138,"column":67},"end":{"row":138,"column":68},"action":"insert","lines":["p"],"id":8}],[{"start":{"row":138,"column":224},"end":{"row":138,"column":237},"action":"remove","lines":["our live chat"],"id":9},{"start":{"row":138,"column":224},"end":{"row":138,"column":225},"action":"insert","lines":["t"]}],[{"start":{"row":138,"column":225},"end":{"row":138,"column":226},"action":"insert","lines":["w"],"id":10}],[{"start":{"row":138,"column":226},"end":{"row":138,"column":227},"action":"insert","lines":["i"],"id":11}],[{"start":{"row":138,"column":227},"end":{"row":138,"column":228},"action":"insert","lines":["t"],"id":12}],[{"start":{"row":138,"column":228},"end":{"row":138,"column":229},"action":"insert","lines":["t"],"id":13}],[{"start":{"row":138,"column":229},"end":{"row":138,"column":230},"action":"insert","lines":["e"],"id":14}],[{"start":{"row":138,"column":230},"end":{"row":138,"column":231},"action":"insert","lines":["r"],"id":15}]]},"ace":{"folds":[],"scrolltop":1826.5,"scrollleft":1088,"selection":{"start":{"row":138,"column":231},"end":{"row":138,"column":231},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":153,"mode":"ace/mode/php"}},"timestamp":1497124394140}